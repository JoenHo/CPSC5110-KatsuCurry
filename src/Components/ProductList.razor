@using ContosoCrafts.WebSite.Models
@using ContosoCrafts.WebSite.Services
@using Microsoft.AspNetCore.Components.Web
@inject JsonFileProductService ProductService

<div id="restaurant_page" class="restaurant_page" runat="server">
<div class="card-columns">
    @foreach (var product in ProductService.GetProducts())
    {
        <div class="card">
            <div class="card-img" style="background-image: url('@product.Image');">
            </div>
            <div class="card-body">
                <h5 class="card-title">@product.Name</h5>
            </div>
            <div class="card-footer">
                <small class="text-muted">
                    <button @onclick="(e => SelectProduct(product?.Id ?? string.Empty))"
                            data-toggle="modal" data-target="#productModal" class="btn btn-primary">
                        More Info
                    </button>
                    <button @onclick="(e => SelectProduct(product?.Id ?? string.Empty))"
                            data-toggle="modal" data-target="#productModal" class="btn btn-primary">
                        Quick Link
                    </button>
                </small>
            </div>
        </div>
    }
</div>


<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        @if (selectedProduct != null)
        {
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productTitle">@selectedProduct.Name</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@selectedProduct.Image');">
                        </div>
                        <div class="card-body">
                            <p class="card-text"><b>LOCATION:</b> @selectedProduct.Address</p>
                        </div>
                        <div class="card-body">
                            <p class="card-text"><b>PHONE:</b> @selectedProduct.Phone</p>
                        </div>
                        <div class="card-body">
                            <p class="card-text">Hours: @selectedProduct.hours</p>
                        </div>
                        <div class="card-body">
                            <p class="card-text">
                                Website: <a href="@selectedProduct.Url" target="_blank">
                                    @selectedProduct.Url
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @if (voteCount == 0)
                    {
                        <span>Be the first to vote!</span>
                    }
                    else
                    {
                        <span>@voteCount @voteLabel</span>
                    }
                    @for (int i = 1; i < 6; i++)
                    {
                        var currentStar = i;
                        if (i <= currentRating)
                        {
                            <span class="fa fa-star checked" @onclick="(e => SubmitRating(currentStar))"></span>
                        }
                        else
                        {
                            <span class="fa fa-star" @onclick="(e => SubmitRating(currentStar))"></span>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>
</div>

<div id="food_page" class="hide" runat="server">
    <div class="card-columns">
        @foreach (var food in ProductService.GetFood())
        {
            <div class="card">
                <div class="card-img" style="background-image: url('@food.Image');">
                </div>
                <div class="card-body">
                    <h5 class="card-title">@food.Restaurant</h5>
                </div>
                <div class="card-footer">
                    <small class="text-muted">
                        <button @onclick="(e => SelectFood(food?.Restaurant ?? string.Empty))"
                                data-toggle="modal" data-target="#FoodModal" class="btn btn-primary">
                            More Info
                        </button>
                        <button @onclick="(e => SelectFood(food?.Restaurant ?? string.Empty))"
                                data-toggle="modal" data-target="#FoodModal" class="btn btn-primary">
                            Quick Link
                        </button>
                    </small>
                </div>
            </div>
        }
    </div>

    <div class="modal fade" id="FoodModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            @if (selectedFood != null)
            {
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="productTitle">@selectedFood.Restaurant</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="card">
                            <div class="card-img" style="background-image: url('@selectedFood.Image');">
                            </div>
                            <div class="card-body">
                                <p class="card-text">Description: @selectedFood.Description</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code
{
    Product? selectedProduct;
    string? selectedProductId;
    Food? selectedFood;
    string? selectedFoodId;

    void SelectProduct(string productId)
    {
        selectedProductId = productId;
        selectedProduct = ProductService.GetProducts().First(x => x.Id == productId);
        GetCurrentRating();
    }

    void SelectFood(string foodId)
    {
        selectedFoodId = foodId;
        selectedFood = ProductService.GetFood().First(x => x.Restaurant == foodId);
    }

    int currentRating = 0;
    int voteCount = 0;
    string? voteLabel;

    void GetCurrentRating()
    {
        if (selectedProduct?.Ratings == null)
        {
            currentRating = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectedProduct.Ratings.Count();
            voteLabel = voteCount > 1 ? "Votes" : "Vote";
            currentRating = selectedProduct.Ratings.Sum() / voteCount;
        }

        System.Console.WriteLine($"Current rating for {selectedProduct?.Id}: {currentRating}");
    }

    void SubmitRating(int rating)
    {
        System.Console.WriteLine($"Rating received for {selectedProduct?.Id}: {rating}");
        if (selectedProductId == null)
            return;
        ProductService.AddRating(selectedProductId, rating);
        SelectProduct(selectedProductId);
    }
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">